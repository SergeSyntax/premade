version: "3.8"

name: devops-premade

services:
  rabbitmq:
    image: bitnami/rabbitmq:3.13.3-debian-12-r0
    network_mode: host
    environment:
      - RABBITMQ_USERNAME=admin
      - RABBITMQ_PASSWORD=admin
      - RABBITMQ_MANAGEMENT_BIND_IP=0.0.0.0
      - RABBITMQ_MANAGEMENT_PORT_NUMBER=15672
      - RABBITMQ_NODE_PORT_NUMBER=5672
      - RABBITMQ_ERL_COOKIE=secretcookie
      - RABBITMQ_MANAGEMENT_ALLOW_WEB_ACCESS=true
    volumes:
      - ${CACHE_DIR:-./cache}/volumes/rabbitmq:/bitnami/rabbitmq
    ports:
      - "15672:15672" # Management console
      - "5672:5672" # RabbitMQ port
    user: "0:0"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 20s
      retries: 3
  mongodb: # https://hub.docker.com/r/bitnami/mongodb
    image: bitnami/mongodb:7.0.11-debian-12-r0
    network_mode: host
    environment:
      MONGODB_ROOT_USER: admin
      MONGODB_ROOT_PASSWORD: admin
      MONGODB_DATABASE: admin
      MONGODB_USERNAME: admin
      MONGODB_PASSWORD: admin
        - ALLOW_EMPTY_PASSWORD=no
      MONGODB_EXTRA_DATABASES: auth,media,orders
      MONGODB_EXTRA_USERNAMES: admin,admin,admin
      MONGODB_EXTRA_PASSWORDS: admin,admin,admin
    volumes:
      - ${CACHE_DIR:-./cache}/volumes/mongodb:/bitnami/mongodb
    ports:
      - "27017:27017" # MongoDB port
    user: "0:0"
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 20s
      retries: 3
  mongo-express: #
    image: mongo-express:1.0.2-20-alpine3.19 # https://hub.docker.com/_/mongo-express
    network_mode: host
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_SERVER: localhost
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
    ports:
      - "8081:8081" # Mongo Express port
    depends_on:
      - mongodb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 30s
      timeout: 20s
      retries: 3
  minio: # https://hub.docker.com/r/bitnami/minio
    image: bitnami/minio:2024.5.28-debian-12-r0
    network_mode: host
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ${CACHE_DIR:-./cache}/volumes/minio/data:/bitnami/minio/data
    user: "0:0"
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3
